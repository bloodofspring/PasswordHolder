services:
  bot:
    image: ${DOCKERHUB_USERNAME}/password-halop-bot:${TAG:-latest} # Используем образ из DockerHub с возможностью указать тег
    container_name: password-halop-bot
    restart: unless-stopped
    environment:
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_PORT=${DB_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - API_KEY=${API_KEY}
      - DEBUG=${DEBUG}
      - ADMIN_ID=${ADMIN_ID}
      - HEALTHCHECK_PORT=${HEALTHCHECK_PORT}
      - NOTIFICATION_BOT_TOKEN=${NOTIFICATION_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
    depends_on:
      - db
    ports:
      - "${HEALTHCHECK_PORT}:${HEALTHCHECK_PORT}"
      - "6060:6060"
    # Все переменные должны пробрасываться через ENV или .env на сервере, secrets не хардкодятся
    # ENTRYPOINT уже определён в Dockerfile, command не требуется

  db:
    image: postgres:15-alpine
    container_name: password-halop-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5555:5432"
    volumes:
      - /var/lib/postgresql/password-halop-bot:/var/lib/postgresql/data # Данные хранятся на VPS, не в контейнере
    # Важно: volume должен быть на VPS, чтобы данные не терялись при пересоздании контейнера 